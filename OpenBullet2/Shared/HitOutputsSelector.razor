@using OpenBullet2.Models.Hits
@inject Microsoft.Extensions.Localization.IStringLocalizer<HitOutputsSelector> Loc

<div class="container-fluid">

    <div class="row mb-3">
        <div class="list-group list-group-horizontal">
            <button class="btn btn-sm btn-outline-primary m-sm-1" @onclick="AddDatabase">
                <span class="oi oi-plus"></span> @Loc["Database"]
            </button>
            <button class="btn btn-sm btn-outline-primary m-sm-1" @onclick="AddFileSystem">
                <span class="oi oi-plus"></span> @Loc["FileSystem"]
            </button>
            <button class="btn btn-sm btn-outline-primary m-sm-1" @onclick="AddDiscord">
                <span class="oi oi-plus"></span> @Loc["DiscordWebhook"]
            </button>
        </div>
    </div>

    @foreach (var output in HitOutputs)
    {
        <div class="row" style="margin-bottom: 15px;">
            <EditForm Model="output">
                @switch (output)
                {
                    case DatabaseHitOutputOptions x:
                        <p style="color: aquamarine;">@Loc["Database"]</p>
                        <p style="font-style: italic">@Loc["NoSettingsRequired"]</p>
                        break;

                    case FileSystemHitOutputOptions x:
                        <p style="color: greenyellow;">@Loc["FileSystem"]</p>
                        <label>@Loc["BaseDirectory"]</label>
                        <InputText @bind-Value="x.BaseDir" />
                        break;

                    case DiscordWebhookHitOutputOptions x:
                        <p style="color: hotpink;">@Loc["DiscordWebhook"]</p>
                        <label>@Loc["WebhookURL"]</label>
                        <InputText @bind-Value="x.Webhook" />
                        <label>@Loc["Username"]</label>
                        <InputText @bind-Value="x.Username" />
                        <label>@Loc["AvatarURL"]</label>
                        <InputText @bind-Value="x.AvatarUrl" />
                        break;
                }
                <button class="btn btn-outline-danger" @onclick="(() => HitOutputs.Remove(output))">
                    <span class="oi oi-x"></span> @Loc["Remove"]
                </button>
            </EditForm>
        </div>
    }
</div>

@code {
    [Parameter] public List<HitOutputOptions> HitOutputs { get; set; }

    void AddDatabase()
    {
        if (!HitOutputs.Any(o => o is DatabaseHitOutputOptions))
            HitOutputs.Add(new DatabaseHitOutputOptions());
    }

    void AddFileSystem()
    {
        if (!HitOutputs.Any(o => o is FileSystemHitOutputOptions))
            HitOutputs.Add(new FileSystemHitOutputOptions());
    }

    void AddDiscord()
    {
        HitOutputs.Add(new DiscordWebhookHitOutputOptions());
    }
}
