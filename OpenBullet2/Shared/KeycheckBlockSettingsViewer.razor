@using RuriLib.Models.Blocks.Custom
@using RuriLib.Models.Blocks.Custom.Keycheck
@inject Microsoft.Extensions.Localization.IStringLocalizer<KeycheckBlockSettingsViewer> Loc

<EditForm Model="Block">
    <h6 class="font-weight-bold text-warning">@Loc["Label"]:</h6>
    <InputText Value="@Block.Label" ValueExpression="@(() => Block.Label)"
               ValueChanged="@((value) => { Block.Label = value; ChangedLabel.InvokeAsync(EventArgs.Empty); })" />
</EditForm>

<h6 class="font-weight-bold text-warning" style="margin-top: 20px;">@Loc["Settings"]:</h6>
@foreach (var setting in Block.Settings)
{
    <BlockInputField BlockSetting="setting" />
    <hr />
}

<h6 class="font-weight-bold text-warning" style="margin-top: 20px;">Keychains:</h6>
<div class="container-fluid">
    <div class="row">
        <div class="list-group list-group-horizontal">
            <button class="btn-sm btn-success m-sm-1" @onclick="AddKeychain"><span class="oi oi-plus"></span></button>
        </div>
    </div>
    @foreach (var keychain in Block.Keychains)
    {
        <KeycheckKeychain Keychain="keychain" />
        <button class="btn-sm btn-danger" @onclick="@(() => Block.Keychains.Remove(keychain))"><span class="oi oi-x"></span></button>
        <button class="btn-sm btn-primary" @onclick="@(() => MoveUp(keychain))"><span class="oi oi-arrow-top"></span> Move up</button>
        <button class="btn-sm btn-primary" @onclick="@(() => MoveDown(keychain))"><span class="oi oi-arrow-bottom"></span> Move down</button>
    }
</div>

@code {
    [Parameter] public KeycheckBlockInstance Block { get; set; }
    [Parameter] public EventCallback ChangedLabel { get; set; }

    private void AddKeychain()
    {
        Block.Keychains.Add(new Keychain());
    }

    private void MoveUp(Keychain keychain)
    {
        var index = Block.Keychains.IndexOf(keychain);

        if (index == 0)
            return;

        Block.Keychains.Remove(keychain);
        Block.Keychains.Insert(index - 1, keychain);
    }

    private void MoveDown(Keychain keychain)
    {
        var index = Block.Keychains.IndexOf(keychain);

        if (index == Block.Keychains.Count - 1)
            return;

        Block.Keychains.Remove(keychain);
        Block.Keychains.Insert(index + 1, keychain);
    }
}
