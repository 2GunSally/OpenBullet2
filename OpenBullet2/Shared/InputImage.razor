@using OpenBullet2.Helpers
@using BlazorInputFile
@using System.IO
@inject Microsoft.Extensions.Localization.IStringLocalizer<Debugger> Loc

<div>
    <div>
        <InputFile OnChange="HandleSelection" />
    </div>
</div>

<div>
    @if (Base64 != null)
    {
        <div>
            <div style="margin: 10px; width: @(MaxWidth)px; height: @(MaxHeight)px;">
                <img src="data:image/png;base64,@Base64" style="height: 100%; width: 100%;" />
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public string Base64 { get; set; }
    [Parameter] public int MaxKilobytes { get; set; } = 100;
    [Parameter] public int MaxWidth { get; set; } = 110;
    [Parameter] public int MaxHeight { get; set; } = 110;
    [Parameter] public EventCallback<string> Base64Changed { get; set; }

    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            byte[] buffer = new byte[4 * 1024];

            using (var ms = new MemoryStream())
            {
                await file.Data.CopyToAsync(ms);
                var bytes = ms.ToArray();

                var resize = false;

                if (bytes.Length > MaxKilobytes * 1024)
                {
                    resize = await js.Confirm(Loc["ImageTooBig"],
                        $"{Loc["ImageTooBigText1"]} {MaxKilobytes}KB. {Loc["ImageTooBigText2"]}", Loc["No"]);
                }

                Base64 = Convert.ToBase64String(bytes);

                if (resize)
                    Base64 = ImageEditor.ResizeBase64(Base64, MaxWidth, MaxHeight);

                await Base64Changed.InvokeAsync(Base64);
                StateHasChanged();
            }
        }
    }
}
