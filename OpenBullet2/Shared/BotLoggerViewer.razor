@using RuriLib.Logging 
@inject IModalService Modal
@inject Microsoft.Extensions.Localization.IStringLocalizer<BotLoggerViewer> Loc

<h5>@Loc["CompleteLog"]</h5>
<div class="debugger-log">
    @foreach (var entry in BotLogger.Entries)
    {
        @if (entry.Message.Contains("\n"))
        {
            <textarea class="debugger-entry border-0" readonly
                style="color: @entry.Color; height: 500px; overflow: hidden; max-width: 50vw; word-wrap: break-word;">
                @entry.Message
            </textarea>
            
            @if (entry.CanViewAsHtml)
            {
                <button class="btn btn-sm btn-outline-primary" @onclick="@(() => ViewHtml(entry.Message))">@Loc["ViewAsHTML"]</button>
            }
        }
        else
        {
            <p style="color: @entry.Color; max-width: 50vw; overflow-wrap: break-word;">@entry.Message</p>
        }
    }
</div>

@code {
    [Parameter] public IBotLogger BotLogger { get; set; }

    public async Task Refresh()
    {
        await InvokeAsync(StateHasChanged);
        await js.InvokeVoidAsync("debuggerScrollToBottom");
    }

    private void ViewHtml(string html)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(HTMLView.Html), html);

        Modal.Show<HTMLView>(Loc["HTMLView"], parameters);
    }
}