@using OpenBullet2.Helpers
@using RuriLib.Models.Configs
@using System.Globalization
@using OpenBullet2.Repositories
@using OpenBullet2.Shared.Forms 
@inject IConfigRepository ConfigRepo
@inject OpenBullet2.Services.ConfigService ConfigService
@inject IModalService Modal

<div class="top-row pl-4 navbar navbar-dark" style="padding-left: 0.5rem !important;">
    <div class="container-fluid" style="margin-left: -5px;">
        <a href="">
            <img src="logohq.png" style="height: 60px; margin-left: 14px;" />
        </a>
    </div>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="jobs">
                <span class="oi oi-pulse" aria-hidden="true"></span> Jobs
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="proxies/groups">
                <span class="oi oi-shield" aria-hidden="true"></span> Proxies
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="wordlists">
                <span class="oi oi-align-left" aria-hidden="true"></span> Wordlists
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="hits">
                <span class="oi oi-bolt" aria-hidden="true"></span> Hits
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="configs">
                <span class="oi oi-cog" aria-hidden="true"></span> Configs
            </NavLink>
        </li>
        @if (displayConfigSubmenu)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="config/edit/metadata">
                    <span class="oi oi-ellipses ml-lg-4" aria-hidden="true"></span> Metadata
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="config/edit/readme">
                    <span class="oi oi-pencil ml-lg-4" aria-hidden="true"></span> Readme
                </NavLink>
            </li>
            @if (displayStackerSubmenu)
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="config/edit/stacker">
                        <span class="oi oi-menu ml-lg-4" aria-hidden="true"></span> Stacker
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="config/edit/lolicode">
                        <span class="oi oi-code ml-lg-4" aria-hidden="true"></span> LoliCode
                    </NavLink>
                </li>
            }
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="config/edit/settings">
                    <span class="oi oi-wrench ml-lg-4" aria-hidden="true"></span> Settings
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="config/edit/code">
                    <span class="oi oi-code ml-lg-4" aria-hidden="true"></span> C# Code
                </NavLink>
            </li>
            <li class="nav-item px-3" style="width: 100%;">
                <button type="button" class="btn btn-success" style="width: 100%" @onclick="SaveConfig">
                    <span class="oi oi-task" aria-hidden="true" style="margin-top: 5px;"></span> Save Config
                </button>
            </li>
        }
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="settings/rurilib">
                <span class="oi oi-wrench" aria-hidden="true"></span> RL Settings
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="settings/openbullet">
                <span class="oi oi-wrench" aria-hidden="true"></span> OB Settings
            </NavLink>
        </li>
    </ul>
</div>

<div class="fixed-bottom float-left text-center mb-3" style="width: 230px;">
    <div style="width: 100%; margin-bottom: 10px;">
        <img class="culture-flag-small" @onclick="ChangeLanguage" src="images/flags/@(CultureInfo.CurrentCulture.Name).png" />
    </div>
    <span style="font-family: Consolas; color: #999; font-size: 12px;">v0.0.1 [Pre-Alpha]</span>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool displayConfigSubmenu = false;
    private bool displayStackerSubmenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        try { ConfigService.OnConfigSelected -= OnConfigSelected; } catch { }

        ConfigService.OnConfigSelected += OnConfigSelected;
        OnConfigSelected(this, ConfigService.SelectedConfig);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void OnConfigSelected(object sender, Config config)
    {
        displayConfigSubmenu = config != null;
        displayStackerSubmenu = config != null && config.Mode != ConfigMode.CSharp;
        await InvokeAsync(StateHasChanged);
    }

    private async Task SaveConfig()
    {
        if (ConfigService.SelectedConfig == null)
        {
            await js.AlertError("404", "No config selected!");
            return;
        }

        // Check if the LoliCode is valid
        if (ConfigService.SelectedConfig.Mode == ConfigMode.LoliCode)
        {
            try
            {
                new RuriLib.Helpers.Transpilers.Loli2StackTranspiler().Transpile(ConfigService.SelectedConfig.LoliCodeScript);
            }
            catch (Exception ex)
            {
                await js.AlertError("Cannot save: invalid LoliCode!", ex.Message);
                return;
            }
        }

        await ConfigRepo.Save(ConfigService.SelectedConfig);
        await js.AlertSuccess("Aww yeah", $"{ConfigService.SelectedConfig.Metadata.Name} was saved successfully!");
    }

    void ChangeLanguage()
    {
        Modal.Show<CultureSelector>("Choose your language");
    }
}
