@using OpenBullet2.Helpers
@using RuriLib.Models.Configs
@using OpenBullet2.Repositories
@inject IConfigRepository ConfigRepo
@inject OpenBullet2.Services.ConfigService ConfigService

<div class="top-row pl-4 navbar navbar-dark">
    <div class="container-fluid">
        <img src="logo2.png" style="width: 35px; height: 35px;" />
        <a class="navbar-brand" href="">OpenBullet 2</a>
    </div>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="jobs">
                <span class="oi oi-pulse" aria-hidden="true"></span> Jobs
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="proxies/groups">
                <span class="oi oi-shield" aria-hidden="true"></span> Proxies
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="wordlists">
                <span class="oi oi-align-left" aria-hidden="true"></span> Wordlists
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="hits">
                <span class="oi oi-bolt" aria-hidden="true"></span> Hits
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="configs">
                <span class="oi oi-cog" aria-hidden="true"></span> Configs
            </NavLink>
        </li>
        @if (displayConfigSubmenu)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="config/edit/metadata">
                    <span class="oi oi-ellipses ml-lg-4" aria-hidden="true"></span> Metadata
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="config/edit/readme">
                    <span class="oi oi-pencil ml-lg-4" aria-hidden="true"></span> Readme
                </NavLink>
            </li>
            @if (displayStackerSubmenu)
            {
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="config/edit/stacker">
                        <span class="oi oi-menu ml-lg-4" aria-hidden="true"></span> Stacker
                    </NavLink>
                </li>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="config/edit/lolicode">
                        <span class="oi oi-code ml-lg-4" aria-hidden="true"></span> LoliCode
                    </NavLink>
                </li>
            }
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="config/edit/settings">
                    <span class="oi oi-wrench ml-lg-4" aria-hidden="true"></span> Settings
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="config/edit/code">
                    <span class="oi oi-code ml-lg-4" aria-hidden="true"></span> Code
                </NavLink>
            </li>
            <li class="nav-item px-3" style="width: 100%;">
                <button type="button" class="btn btn-success" style="width: 100%" @onclick="SaveConfig">
                    <span class="oi oi-task" aria-hidden="true" style="margin-top: 5px;"></span> Save Config
                </button>
            </li>
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool displayConfigSubmenu = false;
    private bool displayStackerSubmenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        ConfigService.OnConfigSelected += OnConfigSelected;
        base.OnInitialized();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void OnConfigSelected(object sender, Config config)
    {
        displayConfigSubmenu = config != null;
        displayStackerSubmenu = config != null && config.Mode != ConfigMode.CSharp;
        await InvokeAsync(StateHasChanged);
    }

    private async Task SaveConfig()
    {
        if (ConfigService.SelectedConfig == null)
        {
            await js.AlertError("404", "No config selected!");
            return;
        }

        // Check if the LoliCode is valid
        if (ConfigService.SelectedConfig.Mode == ConfigMode.LoliCode)
        {
            try
            {
                new RuriLib.Helpers.Transpilers.Loli2StackTranspiler().Transpile(ConfigService.SelectedConfig.LoliCodeScript);
            }
            catch (Exception ex)
            {
                await js.AlertError("Cannot save: invalid LoliCode!", ex.Message);
                return;
            }
        }

        await ConfigRepo.Save(ConfigService.SelectedConfig);
        await js.AlertSuccess("Aww yeah", $"{ConfigService.SelectedConfig.Metadata.Name} was saved successfully!");
    }
}
