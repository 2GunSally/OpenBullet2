@using Blazaco
@using Blazaco.Editor
@using Blazaco.Editor.Options
@using RuriLib.Models.Variables 

<div class="container-fluid" style="margin-bottom: 50px;">
    <div class="row">
        <div class="list-group list-group-horizontal">
            @if (!isRunning)
            {
                <button class="btn-sm btn-success m-sm-1" @onclick="Run"><span class="oi oi-media-play"></span> Start</button>
            }
            else
            {
                <button class="btn-sm btn-danger m-sm-1" @onclick="Stop"><span class="oi oi-media-stop"></span> Stop</button>
            }
        </div>
    </div>
    <div class="row">
        <div class="col-8">
            <h5>Complete Log</h5>
            <div class="debugger-log">
                @foreach (var entry in logger.Entries)
                {
                    @if (entry.Message.Contains("\n"))
                    {
                        <textarea class="debugger-entry" readonly
                                  style="color: @entry.Color; border: none; height: 500px; overflow: hidden;">@entry.Message</textarea>
                        @if (entry.CanViewAsHtml)
                        {
                            <button class="btn-sm btn-primary" @onclick="@(() => ViewHtml(entry.Message))">View as HTML</button>
                        }
                    }
                    else
                    {
                        <p style="color: @entry.Color;">@entry.Message</p>
                    }
                }
            </div>
        </div>
        <div class="col-4">
            <EditForm Model="options">
                <label>Test Data</label>
                <InputText @bind-Value="options.TestData" />
                <label style="margin-top: 15px;">Wordlist Type</label>
                <br />
                <InputSelect @bind-Value="options.WordlistType">
                    @foreach (var name in PersistentSettings.Environment.WordlistTypes.Select(w => w.Name))
                    {
                        <option value="@name">@name</option>
                    }
                </InputSelect>
                <br />
                <label style="margin-top: 15px;">Use Proxy</label>
                <InputCheckbox @bind-Value="options.UseProxy" />
                <br />
                <label style="margin-top: 15px;">Test Proxy</label>
                <InputText @bind-Value="options.TestProxy" />
                <label style="margin-top: 15px;">Type</label>
                <InputSelect @bind-Value="options.ProxyType">
                    @foreach (var name in Enum.GetNames(typeof(RuriLib.Models.Proxies.ProxyType)))
                    {
                        <option value="@name">@name</option>
                    }
                </InputSelect>
            </EditForm>

            <br />
            <h5>Variables</h5>
            <RadzenTree Style="width: 100%; height: 300px; cursor: default;">
                @foreach (var variable in variables)
                {
                    <RadzenTreeItem Text="@variable.Name">
                        @if (variable is StringVariable)
                        {
                            <RadzenTreeItem Text="@variable.AsString()" />
                        }
                        else if (variable is ListOfStringsVariable)
                        {
                            @foreach (var element in variable.AsListOfStrings())
                            {
                                <RadzenTreeItem Text="@element" />
                            }
                        }
                    </RadzenTreeItem>
                }
            </RadzenTree>
        </div>
    </div>
</div>

@code {
    private bool isRunning = false;
}