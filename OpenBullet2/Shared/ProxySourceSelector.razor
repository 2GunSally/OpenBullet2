@using OpenBullet2.Models.Proxies
@using OpenBullet2.Entities 
@inject IProxyGroupRepository ProxyGroupRepo

<div class="container-fluid">

    <div class="row">
        <div class="list-group list-group-horizontal">
            <button class="btn-sm btn-primary m-sm-1" @onclick="AddGroup">
                <span class="oi oi-plus"></span> Group
            </button>
            <button class="btn-sm btn-primary m-sm-1" @onclick="AddFile">
                <span class="oi oi-plus"></span> File
            </button>
            <button class="btn-sm btn-primary m-sm-1" @onclick="AddRemote">
                <span class="oi oi-plus"></span> Remote
            </button>
        </div>
    </div>

    @foreach (var source in ProxySources)
    {
        <div class="row" style="margin-bottom: 15px;">
            <EditForm Model="source">
                @switch (source)
                {
                    case GroupProxySourceOptions x:
                        <p style="color: aquamarine;">Group</p>
                        <InputSelectNumber T="int" @bind-Value="x.GroupId">
                            <option value="-1">All</option>
                            @foreach (var group in groups)
                            {
                                <option value="@group.Id">@group.Name</option>
                            }
                        </InputSelectNumber><br /><br />
                        break;

                    case FileProxySourceOptions x:
                        <p style="color: greenyellow;">File</p>
                        <label>File Name</label>
                        <InputText @bind-Value="x.FileName" />
                        <InputSelect @bind-Value="x.DefaultType">
                            @foreach (var type in Enum.GetNames(typeof(RuriLib.Models.Proxies.ProxyType)))
                            {
                                <option value="@type">@type</option>
                            }
                        </InputSelect>
                        <br /><br />
                        break;

                    case RemoteProxySourceOptions x:
                        <p style="color: hotpink;">Remote</p>
                        <label>Url</label>
                        <InputText @bind-Value="x.Url" />
                        <InputSelect @bind-Value="x.DefaultType">
                            @foreach (var type in Enum.GetNames(typeof(RuriLib.Models.Proxies.ProxyType)))
                            {
                                <option value="@type">@type</option>
                            }
                        </InputSelect>
                        <br /><br />
                        break;
                }
                <button class="btn btn-danger" @onclick="(() => ProxySources.Remove(source))">
                    <span class="oi oi-x"></span> Remove
                </button>
            </EditForm>
        </div>
    }
</div>

@code {
    [Parameter] public List<ProxySourceOptions> ProxySources { get; set; }
    List<ProxyGroupEntity> groups;

    protected override async Task OnInitializedAsync()
    {
        groups = await ProxyGroupRepo.GetAll().ToListAsync();
    }

    void AddGroup()
    {
        ProxySources.Add(new GroupProxySourceOptions());
    }

    void AddFile()
    {
        ProxySources.Add(new FileProxySourceOptions());
    }

    void AddRemote()
    {
        ProxySources.Add(new RemoteProxySourceOptions());
    }
}
