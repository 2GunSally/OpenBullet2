@using RuriLib.Models.Blocks
@using RuriLib.Models.Trees
@inject VolatileSettingsService VolatileSettings
@inject Microsoft.Extensions.Localization.IStringLocalizer<AvailableBlocksViewer> Loc

@if (!currentNode.IsRoot)
{
    <button type="button" class="btn btn-outline-success" @onclick="GoBack">@Loc["Back"]</button>
}

@if (currentNode.SubCategories.Count > 0)
{
    <RadzenDataList WrapItems="true" AllowPaging="false" Data="@currentNode.SubCategories" TItem="CategoryTreeNode" PageSize="100" Style="margin-left: -5px;">
        <Template Context="node">
            <RadzenCard Style="width:250px; max-width: 250px; margin: 0px; padding: 5px;">
                <div class="card" style="background-color: @GetCategory(node).BackgroundColor; cursor: pointer; border: solid 3px var(--bg-secondary);"
                     @onclick="@(() => SelectSubCategory(node))">
                    <div class="card-body" style="color: @GetCategory(node).ForegroundColor;">
                        <h5 class="card-text">@GetCategory(node).Name</h5>
                    </div>
                </div>
            </RadzenCard>
        </Template>
    </RadzenDataList>
}

@if (currentNode.Descriptors.Count > 0)
{
    <RadzenDataList WrapItems="true" AllowPaging="false" Data="@currentNode.Descriptors" TItem="BlockDescriptor" PageSize="100" Style="margin-left: -5px;">
        <Template Context="descriptor">
            <RadzenCard Style="width:250px; max-width: 250px; margin: 0px; padding: 5px;">
                <IndividualDescriptor Descriptor="descriptor" SelectedDescriptor="OnSelectedDescriptor" />
            </RadzenCard>
        </Template>
    </RadzenDataList>
}

<label class="mt-2">@Loc["RecentlyUsed"]:</label>
<RadzenDataList WrapItems="true" AllowPaging="false" Data="@recentDescriptors" TItem="BlockDescriptor" PageSize="100" Style="margin-left: -5px;">
    <Template Context="descriptor">
        <RadzenCard Style="width:250px; max-width: 250px; margin: 0px; padding: 5px;">
            <IndividualDescriptor Descriptor="descriptor" SelectedDescriptor="OnSelectedDescriptor" />
        </RadzenCard>
    </Template>
</RadzenDataList>

@code
{
    [Parameter] public EventCallback<BlockDescriptor> SelectedDescriptor { get; set; }
    private CategoryTreeNode currentNode;
    private List<BlockDescriptor> recentDescriptors;

    protected override void OnInitialized()
    {
        var root = RuriLib.Globals.DescriptorsRepository.AsTree();
        currentNode = root
            .SubCategories.First(s => s.Name == "RuriLib")
            .SubCategories.First(s => s.Name == "Blocks");

        recentDescriptors = VolatileSettings.RecentDescriptors.Take(6).ToList();
    }

    private void SelectSubCategory(CategoryTreeNode subCategory)
    {
        currentNode = subCategory;
    }

    private void GoBack()
    {
        if (!currentNode.IsRoot)
            currentNode = currentNode.Parent;
    }

    private BlockCategory GetCategory(CategoryTreeNode node)
    {
        if (node.Descriptors.Count > 0)
            return node.Descriptors.First().Category;

        var category = GetCategory(node.SubCategories.First());
        category.Name = node.Name;
        return category;
    }

    private void OnSelectedDescriptor(BlockDescriptor descriptor)
    {
        VolatileSettings.AddRecentDescriptor(descriptor);
        SelectedDescriptor.InvokeAsync(descriptor);
    }
}
