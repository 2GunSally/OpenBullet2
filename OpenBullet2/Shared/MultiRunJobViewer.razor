@using RuriLib.Models.Jobs.Threading
@using OpenBullet2.Models.Hits
@using RuriLib.Models.Hits.HitOutputs 
@using RuriLib.Models.Proxies.ProxySources 
@using RuriLib.Models.Data.DataPools 
@using OpenBullet2.Models.Proxies.Sources 
@using System.Globalization
@using RuriLib.Models.Hits; 
@inject Microsoft.Extensions.Localization.IStringLocalizer<MultiRunJobViewer> Loc

<div>
    <p style="color: orange;"><b>@Loc["JobOptions"]</b></p>
    <table class="table">
        <tbody>
            <tr>
                <th scope="row">@Loc["Config"]</th>
                <td>@Job.Config.Metadata.Name @Loc["by"] @Job.Config.Metadata.Author</td>
            </tr>
            <tr>
                <th scope="row">@Loc["DataPool"]</th>
                <td>
                    @switch (Job.DataPool)
                    {
                        case WordlistDataPool x:
                            <span>@Loc["Wordlist"]: @x.Wordlist.Name</span>
                            break;

                        case FileDataPool x:
                            <span>@Loc["File"]: @x.FileName</span>
                            break;

                        case InfiniteDataPool x:
                            <span>@Loc["InfiniteDataPool"]</span>
                            break;

                        case CombinationsDataPool x:
                            <span>@string.Format(Loc["CombinationsText"], x.CharSet, x.Length)</span>
                            break;

                        case RangeDataPool x:
                            <span>@string.Format(Loc["RangeText"], x.Start, x.Amount, x.Step, x.Pad)</span>
                            break;
                    }
                </td>
            </tr>
            <tr>
                <th scope="row">@Loc["ProxySources"]</th>
                <td>
                    @foreach (var source in Job.ProxySources)
                    {
                        <p>
                            @switch (source)
                            {
                                case GroupProxySource x:
                                    <span style="color: aquamarine;">@Loc["Group"]: @x.GroupId</span>
                                    break;

                                case FileProxySource x:
                                    <span style="color: greenyellow;">@Loc["File"]: @x.FileName</span>
                                    break;

                                case RemoteProxySource x:
                                    <span style="color: hotpink;">@Loc["Remote"]: @x.Url</span>
                                    break;
                            }
                        </p>
                    }
                </td>
            </tr>
            <tr>
                <th scope="row">@Loc["ProxyMode"]</th>
                <td>@Job.ProxyMode</td>
            </tr>
            <tr>
                <th scope="row">@Loc["HitOutputs"]</th>
                <td>
                    @foreach (var output in Job.HitOutputs)
                    {
                        <p>
                            @switch (output)
                            {
                                case DatabaseHitOutput x:
                                    <span style="color: aquamarine;">@Loc["Database"]</span>
                                    break;

                                case FileSystemHitOutput x:
                                    <span style="color: greenyellow;">@Loc["FileSystem"] (@x.BaseDir)</span>
                                    break;

                                case DiscordWebhookHitOutput x:
                                    <span style="color: hotpink;">@Loc["DiscordWebhook"] (@x.Webhook.Substring(0, 70) ...)</span>
                                    break;
                            }
                        </p>
                    }
                </td>
            </tr>
            <tr>
                <th scope="row">@Loc["Skip"]</th>
                <td>@Job.Skip</td>
            </tr>
            <tr>
                <th scope="row">@Loc["Bots"]</th>
                <td>
                    <span style="margin-right: 10px;">@Job.Bots</span>
                    @if (!changingBots)
                    {
                        <button class="btn-sm btn-primary" type="button" @onclick="ChangeBots"> @Loc["Change"]</button>
                    }
                    else
                    {
                        <span><i>@Loc["ChangingPleaseWait"]</i></span>
                    }
                </td>
            </tr>
        </tbody>
    </table>
</div>

<p style="color: orange;"><b>@Loc["Controls"]</b></p>
<div class="list-group list-group-horizontal">
    @switch (Job.Status)
    {
        case TaskManagerStatus.Idle:
            <button class="btn-sm btn-success m-sm-1" @onclick="Start"><span class="oi oi-media-play"></span> @Loc["Start"]</button>
            break;

        case TaskManagerStatus.Paused:
            <button class="btn-sm btn-success m-sm-1" @onclick="Resume"><span class="oi oi-media-play"></span> @Loc["Resume"]</button>
            break;

        case TaskManagerStatus.Running:
            <button class="btn-sm btn-warning m-sm-1" @onclick="Pause"><span class="oi oi-media-pause"></span> @Loc["Pause"]</button>
            <button class="btn-sm btn-danger m-sm-1" @onclick="Stop"><span class="oi oi-media-stop"></span> @Loc["Stop"]</button>
            <button class="btn-sm btn-danger m-sm-1" @onclick="Abort"><span class="oi oi-x"></span> @Loc["Abort"]</button>
            break;

        case TaskManagerStatus.Pausing:
            <span><i>@Loc["PausingMessage"]</i></span>
            break;

        case TaskManagerStatus.Stopping:
            <span style="line-height: 30px; margin-top: 5px;"><i>@Loc["Stopping message"] </i></span>
            <button class="btn-sm btn-danger m-sm-1" @onclick="Abort"><span class="oi oi-x"></span> @Loc["Abort"]</button>
            break;
    }
</div>

@if (Job.Manager != null)
{
    <div class="progress mt-3">
        <div class="progress-bar" role="progressbar"
                style="width: @((Job.Manager.Progress * 100).ToString("0", CultureInfo.InvariantCulture))%"></div>
    </div>
}

<div class="mt-2">
    <p style="color: orange;"><b>@Loc["DataStats"]</b></p>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">@Loc["Tested"]</th>
                <th scope="col" style="color: greenyellow;">@Loc["Hits"]</th>
                <th scope="col" style="color: orange;">@Loc["Custom"]</th>
                <th scope="col" style="color: tomato;">@Loc["Bad"]</th>
                <th scope="col" style="color: yellow;">@Loc["Retried"]</th>
                <th scope="col" style="color: plum;">@Loc["Banned"]</th>
                <th scope="col" style="color: skyblue;">@Loc["ToCheck"]</th>
                <th scope="col" style="color: red;">@Loc["Errors"]</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Job.DataTested</td>
                <td style="color: greenyellow;">@Job.DataHits</td>
                <td style="color: orange;">@Job.DataCustom</td>
                <td style="color: tomato;">@Job.DataBad</td>
                <td style="color: yellow;">@Job.DataRetried</td>
                <td style="color: plum;">@Job.DataBanned</td>
                <td style="color: skyblue;">@Job.DataToCheck</td>
                <td style="color: red;">@Job.DataErrors</td>
            </tr>
        </tbody>
    </table>
</div>

<div class="mt-2">
    <p style="color: orange;"><b>@Loc["ProxyStats"]</b></p>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">@Loc["Total"]</th>
                <th scope="col" style="color: greenyellow;">@Loc["Alive"]</th>
                <th scope="col" style="color: tomato;">@Loc["Bad"]</th>
                <th scope="col" style="color: plum;">@Loc["Banned"]</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Job.ProxiesTotal</td>
                <td style="color: greenyellow;">@Job.ProxiesAlive</td>
                <td style="color: tomato;">@Job.ProxiesBad</td>
                <td style="color: plum;">@Job.ProxiesBanned</td>
            </tr>
        </tbody>
    </table>
</div>

<div class="mt-2">
    <p style="color: orange;"><b>@Loc["OtherStats"]</b></p>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">@Loc["CPM"]</th>
                <th scope="col">@Loc["CaptchaCredit"]</th>
                <th scope="col">@Loc["Elapsed"]</th>
                <th scope="col">@Loc["Remaining"]</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                @if (Job.Manager != null)
                {
                    <td>@Job.Manager.CPM</td>
                    <td>@Job.CaptchaCredit</td>
                    <td>@((int)Job.Manager.Elapsed.TotalDays) @Loc["days"] @Job.Manager.Elapsed.ToString(@"hh\:mm\:ss")</td>
                    <td>@((int)Job.Manager.Remaining.TotalDays) @Loc["days"] @Job.Manager.Remaining.ToString(@"hh\:mm\:ss")</td>
                }
                else
                {
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                    <td>-</td>
                }
            </tr>
        </tbody>
    </table>
</div>

<GenericLogger @ref="logger" BufferSize="PersistentSettings.OpenBulletSettings.GeneralSettings.LogBufferSize" />

<RadzenGrid @ref="hitsGrid" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
            AllowPaging="false" PageSize="30"
            AllowSorting="true" Data="@Job.Hits" TItem="Hit" ColumnWidth="200px"
            RowSelect="SelectHit" EmptyText="@Loc["NoRecordsToDisplay"]">
    <Columns>
        <RadzenGridColumn TItem="Hit" Property="Date" Title="@Loc["Date"]" />
        <RadzenGridColumn TItem="Hit" Property="DataString" Title="@Loc["Data"]" />
        <RadzenGridColumn TItem="Hit" Property="Proxy" Title="@Loc["Proxy"]" />
        <RadzenGridColumn TItem="Hit" Property="Type" Title="@Loc["Type"]" />
        <RadzenGridColumn TItem="Hit" Property="CapturedDataString" Title="@Loc["CapturedData"]"
                          Width="@CaptureWidth" CssClass="grid-column-dynamic-width" />
    </Columns>
</RadzenGrid>