@page "/jobs"
@using RuriLib.Models.Jobs
@using RuriLib.Models.Data.DataPools
@inject Microsoft.Extensions.Localization.IStringLocalizer<JobManager> Loc
@attribute [Authorize(Roles = "Admin,Guest")]

<div class="container-fluid">
    <div class="row">
        <div class="list-group list-group-horizontal">
            <button class="btn-sm btn-success m-sm-1" @onclick="NewJob"><span class="oi oi-plus"></span> @Loc["New"]</button>
            <button class="btn-sm btn-danger m-sm-1" @onclick="RemoveAll"><span class="oi oi-x"></span> @Loc["RemoveAll"]</button>
        </div>
    </div>
    @foreach (var job in Manager.Jobs)
    {
        <div class="row" style="margin-top: 5px;">
            <div class="col-11 pl-0">
                <div class="job-overview" @onclick="@(() => SelectJob(job))">
                    <div class="p-4">
                        <h5>Job #@job.Id (@job.GetType().Name) (@job.Status)</h5>
                        @switch (job)
                        {
                            case MultiRunJob x:
                                <p style="margin-bottom: 0.2rem;">
                                    <span>
                                        @if (x.Config != null)
                                        {
                                            <b>Config:</b> @x.Config.Metadata.Name
                                        }
                                        else
                                        {
                                            @Loc["NoConfigSelected"]
                                        }
                                    </span>
                                    <span>
                                        <b>Data Pool:</b>
                                        @switch (x.DataPool)
                                        {
                                            case WordlistDataPool p:
                                                @(p.Wordlist.Name + " (Wordlist)") 
                                                break;

                                            case CombinationsDataPool p:
                                                @("Combinations")
                                                break;

                                            case InfiniteDataPool p:
                                                @("Infinite")
                                                break;

                                            case RangeDataPool p:
                                                @("Range")
                                                break;

                                            case FileDataPool p:
                                                @(p.FileName + ("File"))
                                                break;
                                        }
                                    </span>
                                    <span>
                                        <b>Bots:</b> @x.Bots
                                    </span>
                                    <span>
                                        <b>Proxies:</b> @x.ProxyMode
                                    </span>
                                    <span style="color: yellowgreen;">
                                        <b>Hits:</b> @x.DataHits
                                    </span>
                                    <span style="color: orange">
                                        <b>Custom:</b> @x.DataCustom
                                    </span>
                                    <span style="color: aqua">
                                        <b>ToCheck:</b> @x.DataToCheck
                                    </span>
                                    <span>
                                        <b>Progress:</b> @(x.Manager != null ? (x.Manager.Progress * 100).ToString("0.00") : "?")%
                                    </span>
                                    <span>
                                        <b>CPM:</b> @(x.Manager != null ? x.Manager.CPM : 0)
                                    </span>
                                </p>
                                break;
                        }
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="row">
                    <button class="btn btn-primary" style="height: 100%; width: 100%;"
                            @onclick="(() => Edit(job))" @onclick:stopPropagation="true">
                        @Loc["Edit"]
                    </button>
                </div>
                <div class="row">
                    <button class="btn btn-danger" style="height: 100%; width: 100%;"
                            @onclick="(() => Remove(job))" @onclick:stopPropagation="true">
                        @Loc["Remove"]
                    </button>
                </div>
            </div>
        </div>
    }
</div>