@page "/config/edit/settings"
@using RuriLib.Models.Data
@using RuriLib.Models
@inject Microsoft.Extensions.Localization.IStringLocalizer<EditSettings> Loc
@attribute [Authorize(Roles = "Admin")]

<h1>@Loc["General"]</h1>
<EditForm Model="settings.GeneralSettings">

    <label>@Loc["SuggestedBots"]</label>
    <InputNumber style="margin-bottom: 15px;" @bind-Value="settings.GeneralSettings.SuggestedBots" />

    <label>@Loc["CPMLimit"]</label>
    <InputNumber style="margin-bottom: 15px;" @bind-Value="settings.GeneralSettings.MaximumCPM" />

    <label>@Loc["SaveEmptyCaptures"]</label>
    <InputCheckbox style="margin-bottom: 15px;" @bind-Value="settings.GeneralSettings.SaveEmptyCaptures" />
    <br />

    <label>@Loc["ContinueStopStatuses"]</label>
    <MultipleSelector SelectionChanged="OnSelectionChanged" NotSelected="continueStatuses" Selected="stopStatuses" />
</EditForm>

<h1>@Loc["Requests"]</h1>
<EditForm Model="settings.RequestsSettings">
    <label>@Loc["IgnoreResponseErrors"]</label>
    <InputCheckbox style="margin-bottom: 15px;" @bind-Value="settings.RequestsSettings.IgnoreResponseErrors" />
    <br />
</EditForm>

<h1>@Loc["Proxies"]</h1>
<EditForm Model="settings.ProxySettings">
    <label>@Loc["UseProxies"]</label>
    <InputCheckbox style="margin-bottom: 15px;" @bind-Value="settings.ProxySettings.UseProxies" />
    <br />

    <label>@Loc["MaxUsesPerProxy"]</label>
    <InputNumber style="margin-bottom: 15px;" @bind-Value="settings.ProxySettings.MaxUsesPerProxy" />

    <label>@Loc["BanLoopEvasion"]</label>
    <InputNumber style="margin-bottom: 15px;" @bind-Value="settings.ProxySettings.BanLoopEvasion" />

    <label>@Loc["BanStatuses"]</label>
    <MultipleSelector SelectionChanged="OnSelectionChanged" NotSelected="proxyBanStatuses" Selected="proxyContinueStatuses" />

    <label>@Loc["AllowedProxyTypes"]</label>
    <MultipleSelector SelectionChanged="OnSelectionChanged" NotSelected="allowedProxyTypes" Selected="unallowedProxyTypes" />
</EditForm>

<h1>@Loc["Data"]</h1>
<EditForm Model="settings.DataSettings">
    <label>@Loc["AllowedWordlistTypes"]</label>
    <MultipleSelector SelectionChanged="OnSelectionChanged" NotSelected="allowedWordlistTypes" Selected="unallowedWordlistTypes" />

    <label>@Loc["UrlEncodeAfterSlicing"]</label>
    <InputCheckbox style="margin-bottom: 15px;" @bind-Value="settings.DataSettings.UrlEncodeDataAfterSlicing" />
    <br />

    <label>@Loc["DataRules"]</label>
    <br />
    <div class="list-group list-group-horizontal">
        <button type="button" class="btn btn-sm btn-outline-success" @onclick="@(() => settings.DataSettings.DataRules.Add(new DataRule("", ".*")))">
            <span class="oi oi-plus"></span>
            @Loc["AddBlank"]
        </button>
        <button type="button" class="btn btn-sm btn-outline-primary"
                @onclick="@(() => showRegexHelper = !showRegexHelper)">
            <span class="oi oi-plus"></span> @Loc["ToggleRegexHelper"]
        </button>
        <button type="button" class="btn btn-sm btn-outline-danger"
                @onclick="@(() => settings.DataSettings.DataRules.Clear())">
            <span class="oi oi-x"></span> @Loc["Clear"]
        </button>
    </div>
    @if (showRegexHelper)
    {
        <RegexHelper BuiltRegex="@((regex) => settings.DataSettings.DataRules.Add(new DataRule("", regex)))" />
    }
    <div class="container-fluid" style="margin-top: 15px;">
        @foreach (var rule in settings.DataSettings.DataRules)
        {
            <div class="row">
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["SliceName"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="rule.SliceName" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["RegexToMatch"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="rule.RegexToMatch" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <button type="button" class="btn btn-sm btn-outline-danger" @onclick="@(() => settings.DataSettings.DataRules.Remove(rule))">
                        <span class="oi oi-x"></span></button>
                </div>
            </div>
        }
    </div>
</EditForm>

<h1>@Loc["Inputs"]</h1>
<EditForm Model="settings.InputSettings">
    <p>
        @Loc["InputsDescription"]
    </p>
    <label>@Loc["CustomInputs"]</label>
    <br />
    <div class="list-group list-group-horizontal">
        <button type="button" class="btn btn-sm btn-outline-success" @onclick="@(() => settings.InputSettings.CustomInputs.Add(new CustomInput()))">
            <span class="oi oi-plus"></span> @Loc["Add"]
        </button>
        <button type="button" class="btn btn-sm btn-outline-danger"
                @onclick="@(() => settings.InputSettings.CustomInputs.Clear())">
            <span class="oi oi-x"></span> @Loc["Clear"]
        </button>
    </div>
    <div class="container-fluid" style="margin-top: 15px;">
        @foreach (var input in settings.InputSettings.CustomInputs)
        {
            <div class="row">
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["InputDescription"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="input.Description" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["VariableName"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="input.VariableName" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["DefaultAnswer"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="input.DefaultAnswer" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <button type="button" class="btn btn-sm btn-outline-danger" @onclick="@(() => settings.InputSettings.CustomInputs.Remove(input))">
                        <span class="oi oi-x"></span></button>
                </div>
            </div>
        }
    </div>
</EditForm>

<h1>@Loc["Selenium"]</h1>
<EditForm Model="settings.SeleniumSettings">
    <label>@Loc["AlwaysOpenBrowser"]</label>
    <InputCheckbox style="margin-bottom: 15px;" @bind-Value="settings.SeleniumSettings.AlwaysOpenBrowser" />
    <br />

    <label>@Loc["QuitBrowserStatuses"]</label>
    <MultipleSelector SelectionChanged="OnSelectionChanged" NotSelected="quitBrowserStatuses" Selected="dontQuitBrowserStatuses" />

    <label>@Loc["DisableWebpagesNotifications"]</label>
    <InputCheckbox style="margin-bottom: 15px;" @bind-Value="settings.SeleniumSettings.DisableNotifications" />
    <br />

    <label>@Loc["SeleniumCommandLineArguments"]</label>
    <InputText style="margin-bottom: 15px;" @bind-Value="settings.SeleniumSettings.CommandLineArgs" />

    <label>@Loc["SeleniumUserAgent"]</label>
    <InputText style="margin-bottom: 15px;" @bind-Value="settings.SeleniumSettings.UserAgent" />

    <label>@Loc["RandomUserAgent"]</label>
    <InputCheckbox style="margin-bottom: 15px;" @bind-Value="settings.SeleniumSettings.UseRandomUserAgent" />
    <br />
</EditForm>

<button class="btn btn-outline-warning" style="margin: 10px 0;" @onclick="RestoreDefaults">@Loc["RestoreDefaults"]</button>

@code {
    private bool showRegexHelper = false;
}
