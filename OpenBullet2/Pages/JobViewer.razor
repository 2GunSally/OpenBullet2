@page "/job/{id:int}"
@using RuriLib.Models.Jobs
@using Microsoft.Extensions.Localization
@using OpenBullet2.Auth
@inject JobManagerService Manager
@inject AuthenticationStateProvider Auth 
@inject IStringLocalizer<JobViewer> Loc
@attribute [Authorize(Roles = "Admin,Guest")]

@if (job == null || !CanSeeJob(job.OwnerId))
{
  <p>@Loc["NoJob1"] @Id, @Loc["NoJob2"].</p>
}
else
{
  switch (job)
  {
    case MultiRunJob x:
      <MultiRunJobViewer Job="x"/>
      break;

    case ProxyCheckJob x:
      <ProxyCheckJobViewer Job="x"/>
      break;
  }
}

@code {
  [Parameter] public int Id { get; set; }

  private Job job;
  private int uid = -1;

  protected override async Task OnInitializedAsync()
  {
    uid = await ((OBAuthenticationStateProvider)Auth).GetCurrentUserId();
    job = Manager.Jobs.FirstOrDefault(j => j.Id == Id);
  }

  private bool CanSeeJob(int ownerId)
  {
    return uid == 0 || ownerId == uid;
  }

}