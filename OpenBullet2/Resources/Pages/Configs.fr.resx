<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDone" xml:space="preserve">
    <value>Terminé !</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Êtes-vous sûr ?</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Auteur</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>par</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Catégorie</value>
  </data>
  <data name="ConfigReloadWarning" xml:space="preserve">
    <value>Cela rechargera toutes les configs à partir du disque, donc toutes les modifications non enregistrées seront perdues. Voulez-vous poursuivre ?</value>
  </data>
  <data name="ConfigsSuccessfullyUploaded" xml:space="preserve">
    <value>Configs téléchargées avec succès</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Date de création</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Télécharger</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Éditer</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Dernière modification</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nouveau</value>
  </data>
  <data name="NoConfigSelectedWarning" xml:space="preserve">
    <value>On dirait que vous n'avez sélectionné aucune config !</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Procurations</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Voulez-vous vraiment supprimer</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Recharger</value>
  </data>
  <data name="ToggleView" xml:space="preserve">
    <value>Basculer la vue</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Oula</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Télécharger</value>
  </data>
  <data name="CannotDownloadRemoteConfig" xml:space="preserve">
    <value>Impossible de télécharger la config distante</value>
  </data>
  <data name="CannotEditRemoteConfig" xml:space="preserve">
    <value>Impossible de modifier la config distance</value>
  </data>
  <data name="ConfigWarningMessage" xml:space="preserve">
    <value>ATTENTION ! Les configs contiennent du code C# qui est exécuté sans aucune vérification automatique de comportements malveillants. Si vous utilisez des configs créées par des tiers, il est de VOTRE responsabilité de vous assurer que les configs font exactement ce qu'elles sont censées faire et que rien de louche ne se passe. Vérifiez toujours vous-même le code LoliCode / C# avant de les exécuter si vous ne faites pas entièrement confiance à l'origine.</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Chargement</value>
  </data>
  <data name="LocalConfigs" xml:space="preserve">
    <value>Configs locales</value>
  </data>
  <data name="MissingPlugin" xml:space="preserve">
    <value>Plugin manquant</value>
  </data>
  <data name="MissingPluginText" xml:space="preserve">
    <value>Cette config a été créée avec ce plugin, mais il est manquant</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Distant</value>
  </data>
  <data name="RemoteConfigs" xml:space="preserve">
    <value>Configs distantes</value>
  </data>
  <data name="RemoteConfig" xml:space="preserve">
    <value>Config distante</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>Modifications non enregistrées</value>
  </data>
  <data name="UnsavedChangesText" xml:space="preserve">
    <value>La config actuelle a des modifications non enregistrées ! Continuer quand même ?</value>
  </data>
  <data name="WARNING" xml:space="preserve">
    <value>ATTENTION</value>
  </data>
  <data name="Wordlists" xml:space="preserve">
    <value>Wordlists</value>
  </data>
</root>